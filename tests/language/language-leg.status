# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

[ $component == leg && $checked ]
*: Skip


[ $component == leg || $component == legium ]
AdjacentConstStringLiteralsTest: Crash # Issue 2110
AdjacentStringLiteralsTest: Crash # Cannot call 'get:dartString' on "${s}".
Constructor6Test: Crash
CompileTimeConstant8Test: Fail # We don't take the generic type into account yet.
CompileTimeConstantBTest: Fail # We don't handle constant map literals with __proto__ key yet.
CompileTimeConstantGTest: Fail # We don't handle constants with optional arguments to super yet.
StringInterpolation8Test: Fail # Issue 2127

# Compilation errors.
CTConst3Test: Fail # CompileTimeConstantEvaluator not implemented
CTConstTest: Fail # map not implemented
CallOperatorTest: Fail # Unexpected token 'call'
CanonicalConstTest: Fail # map not implemented
CharEscapeTest: Fail # Unhandled non-BMP character: U+10000
ConstInitTest: Fail # CompileTimeConstantHandler with arguments not implemented
ConstObjectsAreImmutableTest: Fail # map not implemented
Constructor5Test: Fail # no matching constructor found
Context2Test: Fail # switch cases are not implemented
ContinueTest: Fail # switch cases are not implemented
DefaultFactoryLibraryTest: Fail # lib is not a type
DefaultInitTest: Fail # CompileTimeConstantHandler with fields not implemented
DynamicTest: Fail # cannot resolve type F1
Factory3Test: Fail # Handling of compile-time constants.
FinalSyntaxTest/none: Fail # Incorrect compile-time constant handling.
FunctionTypeAlias2Test: Fail # cannot resolve type f1
FunctionTypeAlias3Test: Fail # cannot resolve type F
FunctionTypeAlias4Test: Fail # cannot resolve type F
FunctionTypeAliasTest: Fail # cannot resolve type Fun
FunctionTypeParameter2Test: Fail # Internal Error: expected expected optional parameters
FunctionTypeParameterTest: Fail # Internal Error: expected expected optional parameters
GenericInstanceofTest: Fail # cannot resolve type T
GenericTest: Fail # cannot resolve type T
GetSetSyntaxTest/none: Fail # Parsing of pseudo keywords.
GettersSettersTest: Fail # Internal Error: SsaBuilder.visitIdentifier on non-this
ImplicitScopeTest: Fail # duplicate definition of a="bar"
Issue4515170Test: Fail # cannot resolve VAL
LabelTest: Fail # switch cases are not implemented
LibraryPrefixesTest: Fail # other is not a type
LocalFunctionTest: Fail # duplicate definition of f(var n)=> n*n-1
ManyGenericInstanceofTest: Fail # cannot resolve type T
MapLiteral2Test: Fail # expected a constant string
MapLiteral4Test: Fail # map not implemented
MethodBindingTest: Fail # Internal Error: SsaBuilder.visitIdentifier on non-this
MethodNameTest: Fail # Parsing of pseudo keywords.
MethodOverrideTest: Fail # cannot resolve type GetKeysFunctionType
NamedParameters2Test: Fail # Unimplemented non-matching static call
NamedParameters3Test: Fail # Unimplemented non-matching static call
NamedParameters4Test: Fail # Unimplemented non-matching static call
NamedParametersTypeTest: Fail # Internal Error: Cannot find value
NamingTest: Fail # Internal Error: Cannot find value
NanInfinityTest: Fail # CompileTimeConstantEvaluator not implemented
NullToStringTest: Fail # Closurization of intercepted methods.
NumbersTest: Fail # cannot resolve type Smi
ParameterInitializerTest: Fail # Internal Error: SsaBuilder.visitIdentifier on non-this
PseudoKWTest: Fail # Unexpected token '('
ResourceTest: Fail # #resource tag not recognized - issue 1807
StatementTest: Fail # switch cases are not implemented
SuperAllNamedConstructorTest: Fail # Internal Error: Cannot find value
SuperFieldAccessTest: Fail # Internal Error: SsaBuilder.visitIdentifier on non-this
SuperFieldTest: Fail # no method named city in class B
SuperImplicitClosureTest: Fail # Internal Error: SsaBuilder.visitIdentifier on non-this
SuperOperatorTest: Fail # no method named + in class A
SuperSetterTest: Fail # Internal Error: SsaBuilder.visitIdentifier on non-this
SuperTest: Fail # cannot find tokens to produce error message for i++.
SwitchLabelTest: Fail # switch cases are not implemented
TypeDartcTest: Fail # non-empty instruction stack


# Implementation errors (library or generated code).
AssertionTest: Fail # Expect.equals(expected: <0>, actual: <null>) fails.
BadNamedParametersTest: Fail # NullPointerException
BitOperationsTest: Fail # Expect.equals(expected: <18446744073709552000>, actual: <1>) fails.
ConstEscapeFrogTest: Fail # Expect.equals(expected: <null>, actual: <Instance of 'Bar'>) fails.
ConstListTest: Fail # Expect.equals(expected: <true>, actual: <false>) fails.
Constructor2Test: Fail # Expect.equals(expected: <1-2-3-4-5-6-7->, actual: <1-2-3-5-4-6-7->) fails.
Constructor3Test: Fail # Expect.equals(expected: <1-2-3-4-5-6->, actual: <1-2-4-3-5-6->) fails.
ExampleConstructorTest: Fail # Expect.equals(expected: <0 1 2 3 4 5 6 >, actual: <0 1 3 4 2 5 6 >) fails.
ExpectTest: Fail # Expect.identical did not fail
FactoryImplementationTest: Fail # Expect.equals(expected: <1>, actual: <0>) fails.
FunctionTest: Fail # continue not implemented
GenericDeepTest: Fail # Expect.isTrue(false) fails.
GenericInheritanceTest: Fail # Expect.isTrue(false) fails.
GenericParameterizedExtendsTest: Fail # Expect.isTrue(false) fails.
ImpliedInterfaceTest: Fail # Expect.equals(expected: <true>, actual: <false>) fails.
InstanceCompoundAssignmentOperatorTest: Fail # Expect.equals(expected: <4>, actual: <5>) fails.
Instanceof2Test: Fail # Expect.equals(expected: <true>, actual: <false>) fails.
ListLiteral3Test: Fail # Expect.equals(expected: <true>, actual: <false>) fails.
ListLiteral4Test: Fail # Expect.equals(expected: <110111>, actual: <null>) fails.
ListTest: Fail # TypeError: Object ,,, has no method 'copyFrom$4'
Private3Test: Fail # Expect.equals(expected: <-1>, actual: <The Ring>) fails.
PrivateTest: Fail # Expect.equals(expected: <99>, actual: <499>) fails.
ToStringAsFixedTest: Fail # Expect.equals(expected: <0.0000006>, actual: <0.0000010>) fails.
TypeChecksInFactoryMethodTest: Fail # Expect.equals(expected: <true>, actual: <false>) fails.


#
# The following tests are all semantic tests that we can rely on dartc
# catching for now.
#
AbstractStaticNegativeTest: Fail, OK # Negative language test.
AbstractSyntaxTest/01: Fail, OK # Negative language test.
AbstractSyntaxTest/02: Fail, OK # Negative language test.
AssignTopMethodNegativeTest: Fail, OK # Negative language test.
BlackListedTest/01: Fail, OK # Negative language test.
BlackListedTest/02: Fail, OK # Negative language test.
BlackListedTest/03: Fail, OK # Negative language test.
BlackListedTest/04: Fail, OK # Negative language test.
BlackListedTest/05: Fail, OK # Negative language test.
BlackListedTest/06: Fail, OK # Negative language test.
BlackListedTest/07: Fail, OK # Negative language test.
BlackListedTest/08: Fail, OK # Negative language test.
BlackListedTest/09: Fail, OK # Negative language test.
BlackListedTest/10: Fail, OK # Negative language test.
BlackListedTest/11: Fail, OK # Negative language test.
BlackListedTest/12: Fail, OK # Negative language test.
ClassCycleNegativeTest: Fail, OK # Negative language test.
ClassExtendsNegativeTest: Fail, OK # Negative language test.
ClassOverrideNegativeTest: Fail, OK # Negative language test.
ConstConstructorSyntaxTest/01: Fail, OK # Negative language test.
ConstConstructorSyntaxTest/02: Fail, OK # Negative language test.
ConstConstructorSyntaxTest/03: Fail, OK # Negative language test.
ConstConstructorSyntaxTest/04: Fail, OK # Negative language test.
ConstConstructorSyntaxTest/05: Fail, OK # Negative language test.
ConstCounterNegativeTest: Fail, OK # Negative language test.
ConstFactoryNegativeTest: Fail, OK # Negative language test.
ConstFieldNegativeTest: Fail, OK # Negative language test.
ConstInit4NegativeTest: Fail, OK # Negative language test.
ConstInitNegativeTest: Fail, OK # Negative language test.
ConstOptionalArgsNegativeTest: Fail, OK # 'const' keyword is not verified in literal maps.
ConstSyntaxTest/01: Fail, OK # Negative language test.
ConstSyntaxTest/02: Fail, OK # Negative language test.
ConstSyntaxTest/03: Fail, OK # Negative language test.
Constructor2NegativeTest: Fail, OK # Negative language test.
ConstructorDuplicateInitializersTest/02: Fail, OK # Negative language test.
ConstructorNegativeTest: Pass # For the wrong reason.
ConstructorReturnNegativeTest: Fail, OK # Negative language test.
ConstructorReturnWithArrowNegativeTest: Fail, OK # Negative language test.
ConstructorReturnWithInitAndArrowNegativeTest: Fail, OK # Negative language test.
ConstructorReturnWithInitNegativeTest: Fail, OK # Negative language test.
DuplicateConstructorTest/01: Fail, OK # Negative language test.
DuplicateImplementsTest/01: Fail, OK # Negative language test.
DuplicateImplementsTest/02: Fail, OK # Negative language test.
DuplicateImplementsTest/03: Fail, OK # Negative language test.
DuplicateImplementsTest/04: Fail, OK # Negative language test.
EmptyBodyMemberNegativeTest: Fail, OK # Negative language test.
Factory2NegativeTest: Fail, OK # Negative language test.
Factory3NegativeTest: Fail, OK # Negative language test.
FactoryNegativeTest: Fail, OK # Negative language test.
FauxverrideTest/03: Fail, OK # Negative language test.
FauxverrideTest/05: Fail, OK # Negative language test.
Field1NegativeTest: Fail, OK # Negative language test.
Field2NegativeTest: Fail, OK # Negative language test.
Field3NegativeTest: Fail, OK # Negative language test.
Field4NegativeTest: Fail, OK # Negative language test.
Field5NegativeTest: Fail, OK # Negative language test.
Field6NegativeTest: Fail, OK # Negative language test.
Field6aNegativeTest: Fail, OK # Negative language test.
Field7NegativeTest: Fail, OK # Negative language test.
Field7aNegativeTest: Fail, OK # Negative language test.
FinalForInVariableTest/01: Fail, OK # Negative language test
FinalParamNegativeTest: Fail, OK # Negative language test.
FinalVarNegativeTest: Fail, OK # Negative language test.
FunctionTypeAliasNegativeTest: Fail, OK # Negative language test.
GetterDeclarationNegativeTest: Fail, OK # Negative language test.
InstantiateTypeVariableNegativeTest: Pass  # For the wrong reason.
InterfaceCycleNegativeTest: Fail, OK # Negative language test.
InterfaceFactory3NegativeTest: Fail, OK # Negative language test.
InterfaceFactoryConstructorNegativeTest: Fail, OK # Negative language test.
InterfaceStaticMethodNegativeTest: Fail, OK # Negative language test.
ListLiteral1NegativeTest: Fail, OK # Negative language test.
ListLiteral2NegativeTest: Fail, OK # Negative language test.
MapLiteral1NegativeTest: Fail, OK # Negative language test.
MapLiteral2NegativeTest: Fail, OK # Negative language test.
NewExpressionTypeArgsFrogTest/02: Fail, OK # Negative language test.
NonConstSuperNegativeTest: Fail, OK # Negative language test.
NumberIdentifierNegativeTest: Fail, OK # Negative language test.
Operator1NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod1NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod2NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod3NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod4NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod5NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod6NegativeTest: Fail, OK # Negative language test.
OverrideFieldTest/01: Fail, OK # Negative language test.
OverrideFieldTest/04: Fail, OK # Negative language test.
OverrideMethodWithFieldTest/01: Fail, OK # Negative language test.
Prefix16NegativeTest: Fail, OK # Negative language test.
Prefix18NegativeTest: Fail, OK # Negative language test.
Prefix20NegativeTest: Fail, OK # Negative language test.
Prefix23NegativeTest: Fail, OK # Negative language test.
Prefix9NegativeTest: Fail, OK # Negative language test.
PrivateMember2NegativeTest: Fail, OK # Negative language test.
PrivateMember3NegativeTest: Fail, OK # Negative language test.
PseudoKWIllegalTest/01: Fail, OK # Negative language test.
PseudoKWIllegalTest/03: Fail, OK # Negative language test.
PseudoKWIllegalTest/04: Fail, OK # Negative language test.
PseudoKWIllegalTest/05: Fail, OK # Negative language test.
PseudoKWIllegalTest/06: Fail, OK # Negative language test.
PseudoKWIllegalTest/07: Fail, OK # Negative language test.
PseudoKWIllegalTest/08: Fail, OK # Negative language test.
PseudoKWIllegalTest/09: Fail, OK # Negative language test.
PseudoKWIllegalTest/10: Fail, OK # Negative language test.
PseudoKWIllegalTest/11: Fail, OK # Negative language test.
PseudoKWIllegalTest/12: Fail, OK # Negative language test.
PseudoKWIllegalTest/13: Fail, OK # Negative language test.
PseudoKWIllegalTest/14: Fail, OK # Negative language test.
PseudoKWIllegalTest/15: Fail, OK # Negative language test.
PseudoKWIllegalTest/16: Fail, OK # Negative language test.
ScopeNegativeTest: Fail, OK # Negative language test.
Script1NegativeTest: Fail, OK # Negative language test.
ScriptNegativeTest: Fail, OK # Negative language test.
SetterDeclaration2NegativeTest: Fail, OK # Negative language test.
SetterDeclarationNegativeTest: Fail, OK # Negative language test.
StaticFinalField2NegativeTest: Fail, OK # Negative language test.
StaticFinalFieldNegativeTest: Fail, OK # Negative language test.
StaticTopLevelTest/00: Fail, OK # Negative language test.
StaticTopLevelTest/01: Fail, OK # Negative language test.
StaticTopLevelTest/02: Fail, OK # Negative language test.
StaticTopLevelTest/03: Fail, OK # Negative language test.
StaticTopLevelTest/04: Fail, OK # Negative language test.
StaticTopLevelTest/05: Fail, OK # Negative language test.
StringInterpolation7NegativeTest: Fail, OK # Negative language test.
SyntaxTest/47: Fail, OK # No error on body in const constructor.
Throw7NegativeTest: Fail, OK # Negative language test.
TryCatchSyntaxTest/08: Fail, OK # Negative language test.
TypeVariableBoundsTest/00: Fail, OK # Negative language test.
TypeVariableBoundsTest/07: Fail, OK # Negative language test.
TypeVariableBoundsTest/08: Fail, OK # Negative language test.
TypeVariableScopeTest/00: Fail, OK # Negative language test.
TypeVariableScopeTest/01: Fail, OK # Negative language test.
TypeVariableScopeTest/02: Fail, OK # Negative language test.
TypeVariableScopeTest/03: Fail, OK # Negative language test.
TypeVariableScopeTest/04: Fail, OK # Negative language test.
TypeVariableScopeTest/05: Fail, OK # Negative language test.
WrongNumberTypeArgumentsTest/01: Fail, OK # Negative language test.


TypeVMTest: Fail, OK # VM specific test.


DivByZeroTest: Fail, OK # Leg only has doubles.


RegExp3Test: Fail, OK # Expects exception from const constructor.


# TODO(ahe): Categorize these failures.
ExecuteFinally3Test: Fail


[ $component == leg && $mode == release ]
AssignTopMethodNegativeTest: Crash
