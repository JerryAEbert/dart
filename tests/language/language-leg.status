# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

[ $compiler == dart2js && $checked ]
*: Skip


[ $compiler == dart2js]
CompileTimeConstant8Test: Fail # We don't take the generic type into account yet.
StaticInitializerTypeErrorTest: Fail # Checked mode not supported.


# Compilation errors.
CTConstTest: Fail # We don't take the generic type into account yet.
CallOperatorTest: Fail # Unexpected token 'call'
CharEscapeTest: Fail # Unhandled non-BMP character: U+10000
ConstObjectsAreImmutableTest: Fail # Const objects are not immutable.
Constructor6Test: Fail # Closures inside initializers not implemented.
DefaultFactoryLibraryTest: Fail # lib is not a type
DynamicTest: Fail # cannot resolve type F1
Factory3Test: Fail # internal error: visitIs for type variables not implemented
FunctionLiterals2Test: Fail # Closures inside initializers not implemented.
FunctionSyntaxTest: Fail # Closures inside initializers not implemented.
FunctionTest: Fail # internal error: Closures inside initializers not implemented
FunctionTypeAlias2Test: Fail # cannot resolve type f1
FunctionTypeAlias3Test: Fail # cannot resolve type F
FunctionTypeAlias4Test: Fail # cannot resolve type F
FunctionTypeAliasTest: Fail # cannot resolve type Fun
FunctionTypeParameter2Test: Fail # Internal Error: expected optional parameters
FunctionTypeParameterTest: Fail # Internal Error: expected optional parameters
GenericInstanceofTest: Fail # cannot resolve type T
GenericInstanceof2Test: Fail # fails an instance of test at run time
GenericTest: Fail # cannot resolve type T
GetSetSyntaxTest/none: Fail # Parsing of pseudo keywords.
GettersSettersTest: Fail # Internal Error: SsaBuilder.visitIdentifier on non-this
ImplicitScopeTest: Fail # duplicate definition of a="bar"
LabelTest: Fail # switch cases are not implemented
LibraryPrefixesTest: Fail # other is not a type
LocalFunctionTest: Fail # TypeError: Object #<Closure> has no method '$call$2' (bad exception mapping).
ManyGenericInstanceofTest: Fail # cannot resolve type T
MapLiteral2Test: Fail # expected a constant string
MethodBindingTest: Fail # internal error: super property read not implemented.
MethodNameTest: Fail # Parsing of pseudo keywords.
MethodOverrideTest: Fail # cannot resolve type GetKeysFunctionType
NamedParameters2Test: Fail # Unimplemented non-matching static call
NamedParameters3Test: Fail # Unimplemented non-matching static call
NamedParameters4Test: Fail # Unimplemented non-matching static call
NamingTest: Fail # Broken because operator negate is not accessible as if it was a method.
ParameterInitializerTest: Fail # internal error: super property read not implemented
PseudoKWTest: Fail # Unexpected token '('
SuperAllNamedConstructorTest: Fail # internal error: Cannot find value parameter(v).
SuperFieldAccessTest: Fail # internal error: super property read not implemented
SuperFieldTest: Fail # internal error: super property read not implemented
SuperImplicitClosureTest: Fail # internal error: super property read not implemented
SuperOperatorTest: Fail # internal error: super property store not implemented
SuperSetterTest: Fail # internal error: super property read not implemented
SwitchLabelTest: Fail # error: target of continue is not a loop or switch case


# Implementation errors (library or generated code).
AssertionTest: Fail # Expect.equals(expected: <1>, actual: <0>) fails.
BadNamedParametersTest: Fail # NullPointerException
FactoryImplementationTest: Fail # Expect.equals(expected: <1>, actual: <0>) fails.
GenericDeepTest: Fail # Expect.isTrue(false) fails.
GenericInheritanceTest: Fail # Expect.isTrue(false) fails.
GenericParameterizedExtendsTest: Fail # Expect.isTrue(false) fails.
InstanceCompoundAssignmentOperatorTest: Fail # Expect.equals(expected: <4>, actual: <5>) fails.
Instanceof2Test: Fail # Expect.equals(expected: <true>, actual: <false>) fails.
ListLiteral4Test: Fail # Illegal argument(s): 0 -- checked mode test.
MapLiteral4Test: Fail # Attempt to modify an immutable object -- checked mode test.
NamedParametersTypeTest: Fail # Expect.equals(expected: <111>, actual: <0>) fails. -- checked mode test.
TypeChecksInFactoryMethodTest: Fail # Expect.equals(expected: <true>, actual: <false>) fails. -- checked mode test.
TypeDartcTest: Fail # Expect.equals(expected: <1>, actual: <0>) -- checked mode test.


#
# The following tests are all semantic tests that we can rely on dartc
# catching for now.
#
AbstractStaticNegativeTest: Fail, OK # Negative language test.
AbstractSyntaxTest/01: Fail, OK # Negative language test.
AbstractSyntaxTest/02: Fail, OK # Negative language test.
AssignTopMethodNegativeTest: Fail, OK # Negative language test.
ClassCycleNegativeTest: Fail, OK # Negative language test.
ClassExtendsNegativeTest: Fail, OK # Negative language test.
ClassOverrideNegativeTest: Fail, OK # Negative language test.
ConstConstructorSyntaxTest/01: Fail, OK # Negative language test.
ConstConstructorSyntaxTest/02: Fail, OK # Negative language test.
ConstConstructorSyntaxTest/03: Fail, OK # Negative language test.
ConstConstructorSyntaxTest/04: Fail, OK # Negative language test.
ConstFactoryNegativeTest: Fail, OK # Negative language test.
ConstFieldNegativeTest: Fail, OK # Negative language test.
ConstInit4NegativeTest: Fail, OK # Negative language test.
ConstInitNegativeTest: Fail, OK # Negative language test.
ConstSyntaxTest/01: Fail, OK # Negative language test.
ConstSyntaxTest/02: Fail, OK # Negative language test.
ConstSyntaxTest/03: Fail, OK # Negative language test.
Constructor2NegativeTest: Fail, OK # Negative language test.
ConstructorDuplicateInitializersTest/02: Fail, OK # Negative language test.
ConstructorNegativeTest: Pass # For the wrong reason.
ConstructorReturnNegativeTest: Fail, OK # Negative language test.
ConstructorReturnWithArrowNegativeTest: Fail, OK # Negative language test.
ConstructorReturnWithInitAndArrowNegativeTest: Fail, OK # Negative language test.
ConstructorReturnWithInitNegativeTest: Fail, OK # Negative language test.
DuplicateConstructorTest/01: Fail, OK # Negative language test.
DuplicateImplementsTest/01: Fail, OK # Negative language test.
DuplicateImplementsTest/02: Fail, OK # Negative language test.
DuplicateImplementsTest/03: Fail, OK # Negative language test.
DuplicateImplementsTest/04: Fail, OK # Negative language test.
EmptyBodyMemberNegativeTest: Fail, OK # Negative language test.
Factory2NegativeTest: Fail, OK # Negative language test.
Factory3NegativeTest: Fail, OK # Negative language test.
FactoryNegativeTest: Fail, OK # Negative language test.
FauxverrideTest/03: Fail, OK # Negative language test.
FauxverrideTest/05: Fail, OK # Negative language test.
Field1NegativeTest: Fail, OK # Negative language test.
Field2NegativeTest: Fail, OK # Negative language test.
Field3NegativeTest: Fail, OK # Negative language test.
Field4NegativeTest: Fail, OK # Negative language test.
Field5NegativeTest: Fail, OK # Negative language test.
Field6NegativeTest: Fail, OK # Negative language test.
Field6aNegativeTest: Fail, OK # Negative language test.
Field7NegativeTest: Fail, OK # Negative language test.
Field7aNegativeTest: Fail, OK # Negative language test.
FinalForInVariableTest/01: Fail, OK # Negative language test
FinalParamNegativeTest: Fail, OK # Negative language test.
FinalVarNegativeTest: Fail, OK # Negative language test.
FunctionTypeAliasNegativeTest: Fail, OK # Negative language test.
GetterDeclarationNegativeTest: Fail, OK # Negative language test.
InstantiateTypeVariableNegativeTest: Pass  # For the wrong reason.
InterfaceCycleNegativeTest: Fail, OK # Negative language test.
InterfaceFactory3NegativeTest: Fail, OK # Negative language test.
InterfaceFactoryConstructorNegativeTest: Fail, OK # Negative language test.
InterfaceStaticMethodNegativeTest: Fail, OK # Negative language test.
ListLiteral1NegativeTest: Fail, OK # Negative language test.
ListLiteral2NegativeTest: Fail, OK # Negative language test.
MapLiteral1NegativeTest: Fail, OK # Negative language test.
MapLiteral2NegativeTest: Fail, OK # Negative language test.
NewExpressionTypeArgsFrogTest/02: Fail, OK # Negative language test.
NonConstSuperNegativeTest: Fail, OK # Negative language test.
NumberIdentifierNegativeTest: Fail, OK # Negative language test.
Operator1NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod1NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod2NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod3NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod4NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod5NegativeTest: Fail, OK # Negative language test.
OverrideFieldMethod6NegativeTest: Fail, OK # Negative language test.
OverrideFieldTest/01: Fail, OK # Negative language test.
OverrideFieldTest/04: Fail, OK # Negative language test.
OverrideMethodWithFieldTest/01: Fail, OK # Negative language test.
Prefix16NegativeTest: Fail, OK # Negative language test.
Prefix18NegativeTest: Fail, OK # Negative language test.
Prefix20NegativeTest: Fail, OK # Negative language test.
Prefix23NegativeTest: Fail, OK # Negative language test.
Prefix9NegativeTest: Fail, OK # Negative language test.
PseudoKWIllegalTest/01: Fail, OK # Negative language test.
PseudoKWIllegalTest/03: Fail, OK # Negative language test.
PseudoKWIllegalTest/05: Fail, OK # Negative language test.
PseudoKWIllegalTest/06: Fail, OK # Negative language test.
PseudoKWIllegalTest/07: Fail, OK # Negative language test.
PseudoKWIllegalTest/08: Fail, OK # Negative language test.
PseudoKWIllegalTest/09: Fail, OK # Negative language test.
PseudoKWIllegalTest/10: Fail, OK # Negative language test.
PseudoKWIllegalTest/11: Fail, OK # Negative language test.
PseudoKWIllegalTest/12: Fail, OK # Negative language test.
PseudoKWIllegalTest/13: Fail, OK # Negative language test.
PseudoKWIllegalTest/14: Fail, OK # Negative language test.
PseudoKWIllegalTest/15: Fail, OK # Negative language test.
PseudoKWIllegalTest/16: Fail, OK # Negative language test.
ScopeNegativeTest: Fail, OK # Negative language test.
SetterDeclaration2NegativeTest: Fail, OK # Negative language test.
SetterDeclarationNegativeTest: Fail, OK # Negative language test.
StaticFinalField2NegativeTest: Fail, OK # Negative language test.
StaticFinalFieldNegativeTest: Fail, OK # Negative language test.
StaticTopLevelTest/00: Fail, OK # Negative language test.
StaticTopLevelTest/01: Fail, OK # Negative language test.
StaticTopLevelTest/02: Fail, OK # Negative language test.
StaticTopLevelTest/03: Fail, OK # Negative language test.
StaticTopLevelTest/04: Fail, OK # Negative language test.
StaticTopLevelTest/05: Fail, OK # Negative language test.
StringInterpolation7NegativeTest: Fail, OK # Negative language test.
SyntaxTest/47: Fail, OK # No error on body in const constructor.
Throw7NegativeTest: Fail, OK # Negative language test.
TryCatchSyntaxTest/08: Fail, OK # Negative language test.
TypeVariableBoundsTest/00: Fail, OK # Negative language test.
TypeVariableBoundsTest/07: Fail, OK # Negative language test.
TypeVariableBoundsTest/08: Fail, OK # Negative language test.
TypeVariableScopeTest/00: Fail, OK # Negative language test.
TypeVariableScopeTest/01: Fail, OK # Negative language test.
TypeVariableScopeTest/02: Fail, OK # Negative language test.
TypeVariableScopeTest/03: Fail, OK # Negative language test.
TypeVariableScopeTest/04: Fail, OK # Negative language test.
TypeVariableScopeTest/05: Fail, OK # Negative language test.
WrongNumberTypeArgumentsTest/01: Fail, OK # Negative language test.


TypeVMTest: Fail, OK # VM specific test.
DisablePrivacyTest: Fail, OK # VM specific test.
NumbersTest: Fail, OK # (unintended?) VM specific test.


DivByZeroTest: Fail, OK # Leg only has doubles.
BitOperationsTest: Fail, OK # Tests bit operations outside the 32 bit range.

ExpectTest: Fail, OK # JavaScript canonicalizes all strings. This test assumes that string-concatenation returns a new string.

RegExp3Test: Fail, OK # Expects exception from const constructor.


ListTest: Fail, OK # Obsolete test uses List.copyFrom that was removed on 2011-10-31.

FinalSyntaxTest/none: Fail, OK # Uses deprecated "StrConstant + StrConstant".

[ $compiler == dart2js && $mode == release ]
AssignTopMethodNegativeTest: Crash
