# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

# This directory contains tests that are intended to show the
# current state of the language.

# In order to maintain maximum test coverage for all builds,
# please use the following procedure to mark a test
# failed on architectures other than the one you are working on.
#
# 1) Copy the old version of the test to
#    tests/language/src/TestName[Dartc|VM|Frog]Test.dart.
#    to maintain coverage.
# 2) File a bug on each architecture for the failure due to the language change.
# 3) Update the language/src directory with the updated test.

prefix language


[ $component == vm || $component == dartium ]
GCTest: Fail # Issue 1487
ImpliedInterfaceTest: Fail # Bug 5349944
FBoundedQuantificationTest: Skip # Issue 439
FieldOverrideTest/none: Fail  # Issue 742: field shadowing now allowed
FieldOverrideTest/01: Fail    # Issue 742: field shadowing now allowed
Prefix22Test: Fail            # Issue 575
Prefix23Test: Fail            # Issue 575
PseudoKWIllegalTest/03: Fail  # Issue 356
PseudoKWIllegalTest/08: Fail  # Issue 356
PseudoKWIllegalTest/10: Fail  # Issue 356
PseudoKWIllegalTest/14: Fail  # Issue 356

ImplicitThisTest/01: Fail # Issue 374 (not yet specified)
ImplicitThisTest/02: Fail # Issue 374
ImplicitThisTest/03: Fail # Issue 374
ImplicitThisTest/04: Fail # Issue 374
ImplicitThisTest/none: Fail # Issue 374

# These bugs refer currently ongoing language discussions.
Constructor5Test: Fail          # (Discussion ongoing)
Constructor6Test: Fail          # (Discussion ongoing)

# Regular bugs which should be fixed.

ConstInit6NegativeTest: Fail       # Issue 811

# Issue 905.
TypeVariableBoundsTest/01: Fail
TypeVariableBoundsTest/02: Fail
TypeVariableBoundsTest/05: Fail
TypeVariableBoundsTest/06: Fail
TypeVariableBoundsTest/09: Fail
TypeVariableBoundsTest/10: Fail

SuperFirstConstructorTest: Fail # Issue 1372.

# Issue 1427
CyclicTypeVariableTest: Fail
CyclicTypeVariableTest/01: Fail
CyclicTypeVariableTest/02: Fail
CyclicTypeVariableTest/03: Fail
CyclicTypeVariableTest/04: Fail
CyclicTypeVariableTest/05: Fail

# DartC or Frog specific tests that should not be run by the VM
*DartcTest: Skip
*DartcNegativeTest: Skip
*FrogTest: Skip
*FrogNegativeTest: Skip

# Issue 1034
ConstructorDuplicateInitializersTest/01: Fail
ConstructorDuplicateInitializersTest/02: Fail

# Issue 1355
CallOperatorTest: Fail

ConstConstructorSyntaxTest/05: Fail
GetSetSyntaxTest/04: Fail # Issue 1569
GetSetSyntaxTest/05: Fail # Issue 1569
GetSetSyntaxTest/06: Fail # Issue 1569
GetSetSyntaxTest/07: Fail # Issue 1569
GetSetSyntaxTest/08: Fail # Issue 1569
GetSetSyntaxTest/09: Fail # Issue 1569
GetSetSyntaxTest/10: Fail # Issue 1569
GetSetSyntaxTest/11: Fail # Issue 1569
GetSetSyntaxTest/12: Fail # Issue 1569
GetSetSyntaxTest/13: Fail # Issue 1569
GetSetSyntaxTest/14: Fail # Issue 1569
GetSetSyntaxTest/15: Fail # Issue 1569

[ ($component == vm || $component == dartium) && $unchecked ]

Prefix16NegativeTest: Fail    # Bug 5532534
FunctionTypeAliasNegativeTest: Fail # Bug 5231617

[ ($component == vm || $component == dartium) && $checked ]

DefaultFactory2Test/01: Fail # Issue 943
WrongNumberTypeArgumentsTest: Fail # This test should be negative

[ $component == vm && $mode == debug ]
GCTest: Skip  # Takes too long.

[ $component == vm && $mode == release ]

[ $component == dartc || $component == chromium ]
AbstractSyntaxTest/01: Fail
ConstConstructorSyntaxTest/05: Fail
FinalSyntaxTest/none: Fail

# Marked failed after code generation removed from dartc
ApplicationNegativeTest: Fail    # status change with --check-only
AssertKeywordNegativeTest: Fail    # status change with --check-only
AssignInstanceMethodNegativeTest: Fail    # status change with --check-only
BodyLessConstructorWrongArgNegativeTest: Fail    # status change with --check-only
CallOperatorTest: Pass    # status change with --check-only
CallThroughNullGetterTest: Pass    # status change with --check-only
CharEscapeTest: Pass    # status change with --check-only
ClosureCallWrongArgumentCountNegativeTest: Fail    # status change with --check-only
ConstCounterNegativeTest: Fail    # status change with --check-only
ConstInit4NegativeTest: Fail    # status change with --check-only
ConstObjectsAreImmutableTest: Pass    # status change with --check-only
Constructor2Test: Pass    # status change with --check-only
Constructor3NegativeTest: Fail    # status change with --check-only
Constructor3Test: Pass    # status change with --check-only
Constructor4Test: Pass    # status change with --check-only
Constructor5Test: Pass    # status change with --check-only
Constructor6Test: Pass    # status change with --check-only
ConstructorCallWrongArgumentCountNegativeTest: Fail    # status change with --check-only
CTConstTest: Pass    # status change with --check-only
DivByZeroTest: Pass    # status change with --check-only
DynamicTest: Pass    # status change with --check-only
ExampleConstructorTest: Pass    # status change with --check-only
ExpectTest: Pass    # status change with --check-only
Field3aNegativeTest: Fail    # status change with --check-only
FieldMethod4NegativeTest: Fail    # status change with --check-only
For2Test: Pass    # status change with --check-only
GenericTest: Pass    # status change with --check-only
GetterClosureExecutionOrderTest: Pass    # status change with --check-only
InstanceCallWrongArgumentCountNegativeTest: Fail    # status change with --check-only
IsObjectTest: Pass    # status change with --check-only
Label2NegativeTest: Fail    # status change with --check-only
ListLiteral3Test: Pass    # status change with --check-only
ListTest: Pass    # status change with --check-only
LocalFunction3Test: Pass    # status change with --check-only
LocalFunctionTest: Pass    # status change with --check-only
ManyOverriddenNoSuchMethodTest: Pass    # status change with --check-only
NamedParametersNegativeTest: Fail    # status change with --check-only
NamedParametersTypeTest: Pass    # status change with --check-only
NamingTest: Pass    # status change with --check-only
NoSuchMethodNegativeTest: Fail    # status change with --check-only
NoSuchMethodTest: Pass    # status change with --check-only
NullToStringTest: Pass    # status change with --check-only
OverriddenNoSuchMethodTest: Pass    # status change with --check-only
Prefix6NegativeTest: Fail    # status change with --check-only
PrivateMember3NegativeTest: Fail    # status change with --check-only
RegExp3Test: Pass    # status change with --check-only
StackOverflowTest: Pass    # status change with --check-only
StackTraceTest: Pass    # status change with --check-only
StaticCallWrongArgumentCountNegativeTest: Fail    # status change with --check-only
StaticField1aRunNegativeTest: Fail    # status change with --check-only
StaticField1RunNegativeTest: Fail    # status change with --check-only
StaticField2aRunNegativeTest: Fail    # status change with --check-only
StaticField2RunNegativeTest: Fail    # status change with --check-only
StringConcatTest: Pass    # status change with --check-only
Switch3NegativeTest: Fail    # status change with --check-only

TypeChecksInFactoryMethodTest: Pass    # status change with --check-only


# Problems traiaged before static analysis-only change

AssertTest: Fail             # Uses AssertError class. Bug 4385894.
CTConstTest: Fail            # Bug 5202940, Issue 176
CallThroughNullGetterTest: Fail # Throw ObjectNotClosure instead of NullPointerException.
CallOperatorTest: Fail # Issue 1355
CharEscapeTest: Fail
ConstInit6NegativeTest: Fail       # Issue 811
ConstObjectsAreImmutableTest: Fail  # Bug 5202940, Issue 176
Constructor2Test: Fail       # Issue 255
Constructor3Test: Fail       # Issue 257
Constructor4Test: Fail       # Issue 286
Constructor5Test: Fail       # Issue 8440015 + 'super' initializer does not parse
Constructor6Test: Fail       # Issue 8440015 + 'super' initializer does not parse
DefaultFactoryLibraryTest: Fail          # Issue 514
DivByZeroTest: Fail          # Bug 5184183
DuplicateImplementsTest: Skip # Issue 976
DynamicTest: Fail            # Bug 5527899.
ExampleConstructorTest: Fail # Bug 4205742.
ExpectTest: Fail             # Missing extensions to class Expect.
For2Test: Fail               # Bug 4995208.
FunctionTypeAliasNegativeTest: Fail  # Bug 5231617.
GenericParameterizedExtendsTest: Skip  # Bug 5392297
GenericTest: Fail            # Bug 5393302 (missing call to super constructor)
GetterClosureExecutionOrderTest: Fail # Bug 5481595
IsObjectTest: Fail           # Issue 1455
Library4NegativeTest: Fail   # Bug 5406175
ListLiteral3Test: Fail       # Bug 5202940, Issue 176
ListLiteral4Test: Fail       # Issue 1343
ListTest: Fail               # Bug 5146975.
LiteralUnaryPlusTest/01: Fail # Issue 1399
LocalFunction3Test: Fail     # Bug 4202974.
LocalFunctionTest: Fail      # Bug in test. Bug 4202989 (shadowing).
MapLiteral4Test: Fail        # Issue 1343
ManyOverriddenNoSuchMethodTest: Fail  # Bug 4202974.
NamedParametersTypeTest: Fail            # Implementation in progress.
NamingTest: Fail             # Issue 356
NoSuchMethodTest: Fail       # Bug 4202974.
NullToStringTest: Fail       # Bug 5421978
NumbersTest: Fail            # Fails because numbers are mapped to doubles.
OverriddenNoSuchMethodTest: Fail       # Bug 4202974.
OverrideFieldMethod1NegativeTest: Fail # Bug 5215249
OverrideFieldMethod2NegativeTest: Fail # Bug 5215249
OverrideFieldMethod3NegativeTest: Fail # Bug 5215249
OverrideFieldMethod4NegativeTest: Fail # Bug 5215249
OverrideFieldMethod5NegativeTest: Fail # Bug 5215249
OverrideFieldMethod6NegativeTest: Fail # Bug 5215249
OverrideFieldTest/04: Fail             # Bug 5215249
OverrideMethodWithFieldTest/01: Fail   # Bug 5215249
Prefix11NegativeTest: Fail             # Bug 5406175
Prefix12NegativeTest: Fail             # Bug 5406175
Prefix16NegativeTest: Fail             # Bug 5532534
Prefix3NegativeTest: Fail              # Bug 5406175
PseudoKWTest: Fail           # Issue 356
PseudoKWIllegalTest/01: Fail # Issue 356
PseudoKWIllegalTest/02: Fail # Issue 356
PseudoKWIllegalTest/03: Fail # Issue 356
PseudoKWIllegalTest/04: Fail # Issue 356
PseudoKWIllegalTest/05: Fail # Issue 356
PseudoKWIllegalTest/06: Fail # Issue 356
PseudoKWIllegalTest/07: Fail # Issue 356
PseudoKWIllegalTest/08: Fail # Issue 356
PseudoKWIllegalTest/09: Fail # Issue 356
PseudoKWIllegalTest/10: Fail # Issue 356
PseudoKWIllegalTest/11: Fail # Issue 356
PseudoKWIllegalTest/12: Fail # Issue 356
PseudoKWIllegalTest/13: Fail # Issue 356
PseudoKWIllegalTest/14: Fail # Issue 356
PseudoKWIllegalTest/15: Fail # Issue 356
PseudoKWIllegalTest/16: Fail # Issue 356
RegExp3Test: Fail            # 5299683
ScopeNegativeTest: Fail      # Bug 4207538.
StackOverflowTest: Fail      # Bug 4591172.
StackTraceTest: Fail         # Bug 4971920.
StringConcatTest: Fail       # Bug 5196164
StringEscape1NegativeTest: Fail # Issue 1351.
StringEscape4NegativeTest: Fail # Issue 1351.
SuperOperatorTest: Fail      # Bug 4995463.
Switch7NegativeTest: Fail    # Bug 4208467.
SwitchLabelTest: Fail        # Bug 4208467.
SyntaxTest/29: Fail          # Issue 1606
SyntaxTest/30: Fail          # Issue 1606
SyntaxTest/31: Fail          # Issue 1108
SyntaxTest/32: Fail          # Issue 1108
SyntaxTest/33: Fail # Issue 1108
ThirdTest: Skip # Seems flaky in dartc after fixing test, was Bug 5339586
Throw7NegativeTest: Fail     # Bug 4208459.
TypeChecksInFactoryMethodTest: Fail # Issue 925

#
# Add new dartc annotations above in alphabetical order
#

# VM or Frog specific tests that should not be run by DartC.
*VMTest: Skip
*VMNegativeTest: Skip
*FrogTest: Skip
*FrogNegativeTest: Skip


[ $component == dartium ]
# TODO: These need to be retriaged.
RichardsTest: Fail
TypedMessageTest: Fail # Bug 5246195
StringEscape1NegativeTest: Skip


[ $component == frogsh ]
IntrinsifiedMethodsTest: Fail # Issue 1470
ArithmeticTest: Fail # Issue 1470

[ $component == frog || $component == frogium ]
ToStringAsFixedTest: Fail # fails due to rounding in constant propagation

# This set of four test components (frog, frogsh, frogium, and webdriver) all
# consume frog output, so if frog is generating the incorrect code, chances are
# it will fail on all of these components.
#
# Further explanation:
# frog: frog compiler, run using the VM
# frogsh: self-hosted frog compiler
# frogium: Dart code compiled with frog VM running under DumpRenderTree
# webdriver: Dart code compiled with frog VM running on an actual browser
# (Chrome, IE, Firefox, Safari, etc). If a test is only failing on a particular
# browser, you can be more specific about the failure by using $browser:
# [ $component == webdriver && $browser == chrome ] for example.
[ $component == frog || $component == frogsh || $component == frogium || $component == webdriver]
Factory3Test: Fail # Issue 417
Factory2NegativeTest: Fail
CallThroughNullGetterTest: Fail # Throw ObjectNotClosure instead of NullPointerException.
ExtendTypeParameterNegativeTest: Skip # Issue 886
ExtendTypeParameter2NegativeTest: Skip # Issue 886
FinalSyntaxTest/none: Fail
GetSetSyntaxTest/00: Fail # Issue 1571
GetSetSyntaxTest/01: Fail # Issue 1571
GetSetSyntaxTest/02: Fail # Issue 1571
GetSetSyntaxTest/03: Fail # Issue 1571
GetSetSyntaxTest/04: Fail # Issue 1571
GetSetSyntaxTest/05: Fail # Issue 1571
GetSetSyntaxTest/06: Fail # Issue 1571
GetSetSyntaxTest/07: Fail # Issue 1571
GetSetSyntaxTest/08: Fail # Issue 1571
GetSetSyntaxTest/09: Fail # Issue 1571
GetSetSyntaxTest/10: Fail # Issue 1571
GetSetSyntaxTest/11: Fail # Issue 1571
GetSetSyntaxTest/12: Fail # Issue 1571
GetSetSyntaxTest/13: Fail # Issue 1571
GetSetSyntaxTest/14: Fail # Issue 1571
GetSetSyntaxTest/15: Fail # Issue 1571
ImplementTypeParameterNegativeTest: Skip # Issue 887
FactoryImplementationTest: Fail # Issue 523
PseudoKWTest: Fail  # Issue 356
NamingTest: Fail    # Issue 356
DuplicateImplementsTest: Skip   # Issue 976
ThirdTest: Fail # Issue 1511
TryCatchSyntaxTest/08: Fail
TryCatchSyntaxTest/09: Fail
CondExprTest: Fail

SavannahTest: Skip # TODO(jimhug): Seems flaky on some configs - investigate.

# VM or DartC specific tests not to be run by Frog. See language.status
*VMTest: Skip
*VMNegativeTest: Skip
*DartcTest: Skip
*DartcNegativeTest: Skip
# Currently, these patterns skip three tests:
# MathVMTest - correctly skipped as this relies on VM guarantees
#    - should add a version of this with the --enable_type_checks flag
# TypeVMTest - correctly skipped as this relies on detailed of TypeError
# TypeDartcTest - should pass, need refactoring to get frog safe version

BitOperationsTest: Fail  # relies on big integers not available in JS
CallOperatorTest: Fail # Issue 1355
CallThroughGetterTest: Fail
CharEscapeTest: Fail # relies on 4 byte unicode not available in JS
ClassOverrideNegativeTest: Fail
ClosureSharedStateTest: Fail
ConstObjectsAreImmutableTest: Fail
DefaultFactoryLibraryTest: Fail    # Issue 514
DynamicTest: Fail
ExampleConstructorTest: Fail
Constructor2Test: Fail
Constructor3Test: Fail
Constructor5Test: Fail    # Order of initializers.
Constructor6Test: Fail    # Parse failure in initializers.
ExecuteFinally6Test: Fail
ExpectTest: Fail
FauxverrideTest/03: Fail
FauxverrideTest/05: Fail
FieldOverrideTest/none: Fail  # Issue 743: field shadowing now allowed
FieldOverrideTest/01: Fail    # Issue 743: field shadowing now allowed
Field3NegativeTest: Fail  # Issue 729
FinalParamNegativeTest: Fail
For2Test: Fail
FunctionSyntaxTest: Fail
FunctionTest: Fail
FunctionTypeAliasNegativeTest: Fail
FunctionTypeAliasTest: Fail
FunctionTypeAlias2Test: Fail
FunctionTypeAlias3Test: Fail
FunctionTypeAlias4Test: Fail
FunctionTypeParameter2Test: Fail
FunctionTypeParameterTest: Fail
GenericDeepTest: Fail
GenericInstanceofTest: Fail
GenericSyntaxTest: Fail
GenericTest: Fail
GenericsTest: Fail
GetterClosureExecutionOrderTest: Pass # TODO(jmesserly): I don't think this is really passing in the static case
ImplicitScopeTest: Fail
ImpliedInterfaceTest: Fail
Instanceof2Test: Fail
InterfaceFactory3NegativeTest: Fail
IsNotClass4NegativeTest: Fail
LabelTest: Fail
ListLiteral3Test: Fail # vm and frog throw different exceptions
ListLiteral4Test: Fail # missing type checks on index operations
ListTest: Fail         # array bound checks not implemented
LocalFunction3Test: Fail
LocalFunctionTest: Fail
ManyGenericInstanceofTest: Fail
MapLiteral4Test: Fail # missing checks on map index operations
MathTest: Fail
MethodOverrideTest: Fail # checking on precise type rules for methods
NamedParametersPassingFalsyTest: Fail
NamedParametersTypeTest: Fail
NamedParametersWithConversionsTest: Fail
NonConstSuperNegativeTest: Fail
NullPointerExceptionTest: Fail
NullTest: Fail
NullToStringTest: Fail
NumbersTest: Fail
OverrideFieldTest/01: Fail
OverrideFieldTest/04: Fail
OverrideMethodWithFieldTest/01: Fail
ParameterInitializer5NegativeTest: Fail  # Issue 581
Prefix8NegativeTest: Fail
Prefix9NegativeTest: Fail
Prefix11NegativeTest: Fail
Prefix16NegativeTest: Fail
Prefix20NegativeTest: Fail
Prefix22NegativeTest: Fail
Prefix23NegativeTest: Fail
PrivateMemberTest: Fail
PrivateMember2NegativeTest: Fail
PrivateMember3NegativeTest: Fail
PrivateTest: Fail
RegExp3Test: Fail
ScopeNegativeTest: Fail
ScriptNegativeTest: Fail
StringTest: Fail
SuperImplicitClosureTest: Fail
SuperTest: Fail  # this is testing precise ordering of super constructor call
SwitchLabelTest: Fail
TypeChecksInFactoryMethodTest: Fail # Issue 925
TypeVariableBoundsTest/00: Fail # these tests would work if the type was constructed
TypeVariableBoundsTest/10: Fail
TypeVariableIdentifierExpressionNegativeTest: Fail # Issue 643
TypeVariableShadowsClass: Fail # Issue 643
WrongNumberTypeArgumentsTest: Fail
ImplicitThisTest/01: Fail # Issue 376
ImplicitThisTest/02: Fail # Issue 376
ImplicitThisTest/03: Fail # Issue 376
ImplicitThisTest/04: Fail # Issue 376
ImplicitThisTest/none: Fail # Issue 376

#Issue 1308
NamedParameters2Test: Fail
NamedParameters3Test: Fail
NamedParameters4Test: Fail

StringEscape4NegativeTest: Fail # Issue 1352


[ $component == webdriver && $browser == chrome ]
StringEscape1NegativeTest: Skip

[ $component == webdriver && ($browser == ff || $browser == safari || $browser == ie) ]
MethodInvocationTest: Fail
Private3Test: Fail
StackTraceTest: Fail
StringInterpolateNPETest: Fail

# For these tests Frog generates invalid JS. Chrome throws a SyntaxError, but
# other browsers don't, so they eventually timeout. See issue 1515.
# In any case, we shouldn't be relying on SyntaxError.
Label2NegativeTest: Skip
Label3NegativeTest: Skip
Label5NegativeTest: Skip
Label6NegativeTest: Skip
LabelTest: Skip
StringEscape1NegativeTest: Skip
Switch3NegativeTest: Skip
Switch4NegativeTest: Skip
ExecuteFinally6Test: Skip

[ $component == webdriver && $browser == safari ]
BlockScopeTest: Fail
ClosureBreak1Test: Fail
ClosureBreakTest: Fail
ExecuteFinally7Test: Fail
FunctionLiteralsTest: Fail
ImplicitClosure1Test: Fail
ImplicitClosureTest: Fail
MethodBindingTest: Fail
Prefix15Test: Fail
ToStringAsFixedTest: Pass,Fail # Passes in 32-bit Safari, but fails in 64-bit Issue #1220
GCTest: Fail

[ $component == webdriver && $browser == ff ]
NamingTest: Fail
StackOverflowTest: Fail
ToStringAsFixedTest: Fail
ExecuteFinally7Test: Skip
StaticFinalField2NegativeTest: Skip

[ $component == webdriver && $browser == ie ]
ToStringAsFixedTest: Fail
StackOverflowTest: Fail
ObjectDynamicMethodTest: Fail
NumberSyntaxTest: Fail

[ $component == webdriver && $browser == ie && ($system == linux || $system == mac) ]
*: Skip

[ $component == webdriver && $browser == safari && ($system == linux || $system == windows) ]
*: Skip


[ ($component == frogsh ||  $component == frog || $component == frogium) && $unchecked ]
PrivateMemberTest/01: Fail # test seems bad - see issue #353
PrivateMemberTest/02: Fail # test seems bad - see issue #353
PrivateMemberTest/03: Fail # test seems bad - see issue #353
PrivateMemberTest/04: Fail # test seems bad - see issue #353

[ ($component == frogsh ||  $component == frog || $component == frogium) && $checked ]
PrivateMemberTest/none: Fail # test seems bad - see issue #353

[ $component == frog || $component == frogsh ]
# these tests are inconsistent in frogium and frogsh-node, investigate
StaticField1RunNegativeTest: Pass
StaticField2RunNegativeTest: Pass
SyntaxTest/28: Fail # Issue 1109
SyntaxTest/29: Fail # Issue 1109
SyntaxTest/31: Fail # Issue 1109
SyntaxTest/32: Fail # Issue 1109
SyntaxTest/33: Fail # Issue 1109
StringEscape3NegativeTest: Fail # Issue 1352
LiteralUnaryPlusTest/01: Fail # Issue 1400

[ $component == frogium ]
# these tests are inconsistent in frogium and frogsh-node, investigate
StaticField1RunNegativeTest: Pass # but error is not correct
StaticField2RunNegativeTest: Pass # but error is not correct

[ $component == frog && $mode == debug ]
ConstructorRedirect1NegativeTest: Skip # Undiagnosed infinite loop.
ConstructorRedirect2NegativeTest: Skip # Undiagnosed infinite loop.

[ $arch == simarm ]
*: Skip

[ $arch == arm ]
*: Skip

